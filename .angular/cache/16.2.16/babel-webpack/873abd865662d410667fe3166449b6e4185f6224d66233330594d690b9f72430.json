{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  get isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n  login() {\n    this.loggedIn.next(true);\n  }\n  logout() {\n    this.loggedIn.next(false);\n  }\n  constructor() {\n    this.loggedIn = new BehaviorSubject(false);\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","AuthService","isLoggedIn","loggedIn","asObservable","login","next","logout","constructor","factory","ɵfac","providedIn"],"sources":["/Users/andreaelopez/Desktop/Reynodance_Academy/reynodance-academy/src/app/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loggedIn = new BehaviorSubject<boolean>(false);\n\n  get isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n\n  login() {\n    this.loggedIn.next(true);\n  }\n\n  logout() {\n    this.loggedIn.next(false);\n  }\n  constructor() { }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAGtB,IAAIC,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACC,QAAQ,CAACC,YAAY,EAAE;EACrC;EAEAC,KAAKA,CAAA;IACH,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAC,IAAI,CAAC;EAC1B;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACJ,QAAQ,CAACG,IAAI,CAAC,KAAK,CAAC;EAC3B;EACAE,YAAA;IAbQ,KAAAL,QAAQ,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;EAatC;;;uBAdLC,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAQ,OAAA,EAAXR,WAAW,CAAAS,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
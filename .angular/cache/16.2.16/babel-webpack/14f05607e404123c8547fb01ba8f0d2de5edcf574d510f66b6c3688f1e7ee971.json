{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./http.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./navbar/navbar.component\";\nimport * as i4 from \"./footer/footer.component\";\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.title = 'reynodance-academy';\n  }\n  ngOnInit() {\n    this.http.getData().subscribe(response => {\n      console.log(response);\n      this.data = response.message; //store the response from the backend into the data variable\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 8,\n      vars: 1,\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-navbar\");\n          i0.ɵɵelementStart(1, \"div\")(2, \"h1\");\n          i0.ɵɵtext(3, \"Response from Spring Boot API:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\");\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(6, \"router-outlet\")(7, \"app-footer\");\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.data);\n        }\n      },\n      dependencies: [i2.RouterOutlet, i3.NavbarComponent, i4.FooterComponent],\n      styles: [\"p[_ngcontent-%COMP%]{\\n    color: black;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsicHtcbiAgICBjb2xvcjogYmxhY2s7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["AppComponent","constructor","http","title","ngOnInit","getData","subscribe","response","console","log","data","message","error","i0","ɵɵdirectiveInject","i1","HttpService","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate"],"sources":["/Users/andreaelopez/Desktop/Reynodance_Academy/reynodance-academy/src/app/app.component.ts","/Users/andreaelopez/Desktop/Reynodance_Academy/reynodance-academy/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'reynodance-academy';\n\n  data: any;\n\n  constructor(private http: HttpService){}\n\n  ngOnInit(): void {\n    this.http.getData().subscribe(response => {\n    console.log(response);\n      this.data = response.message; //store the response from the backend into the data variable\n    },\n    (error) => {\n      console.error('Error:', error);\n    }\n  )\n  }\n}\n","<app-navbar></app-navbar>\n<div>\n    <h1>Response from Spring Boot API:</h1>\n    <p>{{ data }}</p>  <!-- This will display the data -->\n</div>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n\n"],"mappings":";;;;;AAQA,OAAM,MAAOA,YAAY;EAKvBC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,KAAK,GAAG,oBAAoB;EAIW;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACF,IAAI,CAACG,OAAO,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG;MACzCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACnB,IAAI,CAACG,IAAI,GAAGH,QAAQ,CAACI,OAAO,CAAC,CAAC;IAChC,CAAC,EACAC,KAAK,IAAI;MACRJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CACF;EACD;;;uBAhBWZ,YAAY,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAZhB,YAAY;MAAAiB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRzBT,EAAA,CAAAW,SAAA,iBAAyB;UACzBX,EAAA,CAAAY,cAAA,UAAK;UACGZ,EAAA,CAAAa,MAAA,qCAA8B;UAAAb,EAAA,CAAAc,YAAA,EAAK;UACvCd,EAAA,CAAAY,cAAA,QAAG;UAAAZ,EAAA,CAAAa,MAAA,GAAU;UAAAb,EAAA,CAAAc,YAAA,EAAI;UAErBd,EAAA,CAAAW,SAAA,oBAA+B;;;UAFxBX,EAAA,CAAAe,SAAA,GAAU;UAAVf,EAAA,CAAAgB,iBAAA,CAAAN,GAAA,CAAAb,IAAA,CAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
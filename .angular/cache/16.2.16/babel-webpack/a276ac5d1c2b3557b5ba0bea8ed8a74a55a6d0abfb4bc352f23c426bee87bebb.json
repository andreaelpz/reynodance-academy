{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let StudentsComponent = class StudentsComponent {\n  constructor(adminService) {\n    this.adminService = adminService;\n    this.registrations = [];\n    this.username = 'admin';\n    this.password = 'admin123';\n  }\n  ngOnInit() {\n    this.fetchRegistrations();\n  }\n  get pendingRegistrations() {\n    return this.registrations.filter(registration => registration.status === 'PENDING');\n  }\n  fetchRegistrations() {\n    this.adminService.getRegistrations(this.username, this.password).subscribe(data => {\n      this.registrations = data;\n      console.log('Registrations:', data);\n    }, error => {\n      console.error('Error fetching registrations', error);\n    });\n  }\n  acceptRegistration(id) {\n    this.adminService.acceptRegistration(id, this.username, this.password).subscribe(response => {\n      alert('Registration accepted and email sent');\n      console.log(response);\n      this.fetchRegistrations(); // Refresh the list\n    }, error => {\n      console.error('Error accepting registration', error);\n    });\n  }\n  rejectRegistration(id) {\n    this.adminService.rejectRegistration(id, this.username, this.password).subscribe(response => {\n      alert('Registration rejected and deleted');\n      console.log(response);\n      this.fetchRegistrations(); // Refresh the list\n    }, error => {\n      console.error('Error rejecting registration', error);\n    });\n  }\n};\nStudentsComponent = __decorate([Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css']\n})], StudentsComponent);","map":{"version":3,"names":["Component","StudentsComponent","constructor","adminService","registrations","username","password","ngOnInit","fetchRegistrations","pendingRegistrations","filter","registration","status","getRegistrations","subscribe","data","console","log","error","acceptRegistration","id","response","alert","rejectRegistration","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/andreaelopez/Desktop/Reynodance_Academy/reynodance-academy/src/app/adminView/students/students.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css']\n})\nexport class StudentsComponent implements OnInit{\n  registrations: Registration[] = [];\n\n  username = 'admin'; \n  password = 'admin123';\n\n  constructor(private adminService: AdminService) {}\n\n  ngOnInit(): void {\n    this.fetchRegistrations();\n  }\n\n  get pendingRegistrations() {\n    return this.registrations.filter(registration => registration.status === 'PENDING');\n  }\n\n  fetchRegistrations(): void {\n    this.adminService.getRegistrations(this.username, this.password)\n      .subscribe(\n        (data) => {\n          this.registrations = data;\n          console.log('Registrations:', data);\n        },\n        (error) => {\n          console.error('Error fetching registrations', error);\n        }\n      );\n  }\n\n  acceptRegistration(id: string): void {\n    this.adminService.acceptRegistration(id, this.username, this.password).subscribe(\n      (response) => {\n        alert('Registration accepted and email sent');\n        console.log(response);\n        this.fetchRegistrations(); // Refresh the list\n      },\n      (error) => {\n        console.error('Error accepting registration', error);\n      }\n    );\n  }\n\n  rejectRegistration(id: string): void {\n    this.adminService.rejectRegistration(id, this.username, this.password).subscribe(\n      (response) => {\n        alert('Registration rejected and deleted');\n        console.log(response);\n        this.fetchRegistrations(); // Refresh the list\n      },\n      (error) => {\n        console.error('Error rejecting registration', error);\n      }\n    );\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM5BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IALhC,KAAAC,aAAa,GAAmB,EAAE;IAElC,KAAAC,QAAQ,GAAG,OAAO;IAClB,KAAAC,QAAQ,GAAG,UAAU;EAE4B;EAEjDC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEA,IAAIC,oBAAoBA,CAAA;IACtB,OAAO,IAAI,CAACL,aAAa,CAACM,MAAM,CAACC,YAAY,IAAIA,YAAY,CAACC,MAAM,KAAK,SAAS,CAAC;EACrF;EAEAJ,kBAAkBA,CAAA;IAChB,IAAI,CAACL,YAAY,CAACU,gBAAgB,CAAC,IAAI,CAACR,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAC7DQ,SAAS,CACPC,IAAI,IAAI;MACP,IAAI,CAACX,aAAa,GAAGW,IAAI;MACzBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;IACrC,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CACF;EACL;EAEAC,kBAAkBA,CAACC,EAAU;IAC3B,IAAI,CAACjB,YAAY,CAACgB,kBAAkB,CAACC,EAAE,EAAE,IAAI,CAACf,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACQ,SAAS,CAC7EO,QAAQ,IAAI;MACXC,KAAK,CAAC,sCAAsC,CAAC;MAC7CN,OAAO,CAACC,GAAG,CAACI,QAAQ,CAAC;MACrB,IAAI,CAACb,kBAAkB,EAAE,CAAC,CAAC;IAC7B,CAAC,EACAU,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CACF;EACH;EAEAK,kBAAkBA,CAACH,EAAU;IAC3B,IAAI,CAACjB,YAAY,CAACoB,kBAAkB,CAACH,EAAE,EAAE,IAAI,CAACf,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACQ,SAAS,CAC7EO,QAAQ,IAAI;MACXC,KAAK,CAAC,mCAAmC,CAAC;MAC1CN,OAAO,CAACC,GAAG,CAACI,QAAQ,CAAC;MACrB,IAAI,CAACb,kBAAkB,EAAE,CAAC,CAAC;IAC7B,CAAC,EACAU,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CACF;EACH;CAED;AAvDYjB,iBAAiB,GAAAuB,UAAA,EAL7BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW1B,iBAAiB,CAuD7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../admin.service\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = function () {\n  return [\"/registrations\"];\n};\nexport class AdminComponent {\n  constructor(adminService) {\n    this.adminService = adminService;\n    this.registrations = [];\n  }\n  ngOnInit() {\n    this.fetchRegistrations();\n  }\n  fetchRegistrations() {\n    this.adminService.getAllRegistrations().subscribe(data => this.registrations = data, error => console.error('Error fetching registrations', error));\n  }\n  updateStatus(id, status) {\n    this.adminService.updateRegistrationStatus(id, status).subscribe(() => {\n      this.fetchRegistrations(); // Refresh after update\n    }, error => console.error('Error updating status', error));\n  }\n  static {\n    this.ɵfac = function AdminComponent_Factory(t) {\n      return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.AdminService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminComponent,\n      selectors: [[\"app-admin\"]],\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"container\"], [\"type\", \"button\", 3, \"routerLink\"]],\n      template: function AdminComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n          i0.ɵɵtext(2, \"Registrations\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"button\");\n          i0.ɵɵtext(4, \" Payments\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c0));\n        }\n      },\n      dependencies: [i2.RouterLink],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["AdminComponent","constructor","adminService","registrations","ngOnInit","fetchRegistrations","getAllRegistrations","subscribe","data","error","console","updateStatus","id","status","updateRegistrationStatus","i0","ɵɵdirectiveInject","i1","AdminService","selectors","decls","vars","consts","template","AdminComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["/Users/andreaelopez/Desktop/Reynodance_Academy/reynodance-academy/src/app/adminView/admin/admin.component.ts","/Users/andreaelopez/Desktop/Reynodance_Academy/reynodance-academy/src/app/adminView/admin/admin.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/user/user.models';\nimport { AdminService } from '../admin.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  registrations: User[] = [];\n\n  constructor(private adminService: AdminService) {}\n\n  ngOnInit(): void {\n    this.fetchRegistrations();\n  }\n\n  fetchRegistrations(): void {\n    this.adminService.getAllRegistrations().subscribe(\n      (data) => this.registrations = data,\n      (error) => console.error('Error fetching registrations', error)\n    );\n  }\n\n  updateStatus(id: string, status: string): void {\n    this.adminService.updateRegistrationStatus(id, status).subscribe(\n      () => {\n        this.fetchRegistrations(); // Refresh after update\n      },\n      (error) => console.error('Error updating status', error)\n    );\n  }\n}\n","<div class = \"container\">\n    <button type = \"button\" [routerLink] = \"['/registrations']\" >Registrations</button>\n    <button> Payments</button>\n\n</div>"],"mappings":";;;;;;AASA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAAC,aAAa,GAAW,EAAE;EAEuB;EAEjDC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkBA,CAAA;IAChB,IAAI,CAACH,YAAY,CAACI,mBAAmB,EAAE,CAACC,SAAS,CAC9CC,IAAI,IAAK,IAAI,CAACL,aAAa,GAAGK,IAAI,EAClCC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAChE;EACH;EAEAE,YAAYA,CAACC,EAAU,EAAEC,MAAc;IACrC,IAAI,CAACX,YAAY,CAACY,wBAAwB,CAACF,EAAE,EAAEC,MAAM,CAAC,CAACN,SAAS,CAC9D,MAAK;MACH,IAAI,CAACF,kBAAkB,EAAE,CAAC,CAAC;IAC7B,CAAC,EACAI,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CACzD;EACH;;;uBAvBWT,cAAc,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;IAAA;EAAA;;;YAAdlB,cAAc;MAAAmB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT3BV,EAAA,CAAAY,cAAA,aAAyB;UACwCZ,EAAA,CAAAa,MAAA,oBAAa;UAAAb,EAAA,CAAAc,YAAA,EAAS;UACnFd,EAAA,CAAAY,cAAA,aAAQ;UAACZ,EAAA,CAAAa,MAAA,gBAAQ;UAAAb,EAAA,CAAAc,YAAA,EAAS;;;UADFd,EAAA,CAAAe,SAAA,GAAmC;UAAnCf,EAAA,CAAAgB,UAAA,eAAAhB,EAAA,CAAAiB,eAAA,IAAAC,GAAA,EAAmC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
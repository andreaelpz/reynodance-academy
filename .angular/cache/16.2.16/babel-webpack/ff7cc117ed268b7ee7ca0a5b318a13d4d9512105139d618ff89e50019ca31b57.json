{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SignUpComponent = class SignUpComponent {\n  constructor(route, authService, router, http) {\n    this.route = route;\n    this.authService = authService;\n    this.router = router;\n    this.http = http;\n    this.username = '';\n    this.password = '';\n    this.registrationID = '';\n  }\n  onSubmit() {\n    const credentials = {\n      username: this.username,\n      password: this.password\n    };\n    // Send to the backend to create the username/password and move to users\n    this.http.post(`http://localhost:8080/api/create-username-password/${this.registrationId}`, credentials).subscribe(response => {\n      // Handle the response (e.g., show success message)\n    });\n  }\n};\nSignUpComponent = __decorate([Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})], SignUpComponent);","map":{"version":3,"names":["Component","SignUpComponent","constructor","route","authService","router","http","username","password","registrationID","onSubmit","credentials","post","registrationId","subscribe","response","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/andreaelopez/Desktop/Reynodance_Academy/reynodance-academy/src/app/user/sign-up/sign-up.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent {\n  username: string = '';\n  password: string = '';\n  registrationID: string = '';\n\n  constructor(private route: ActivatedRoute, private authService: AuthService, private router: Router, private http: HttpClient) {}\n\n  onSubmit() {\n    const credentials = { username: this.username, password: this.password };\n    \n    // Send to the backend to create the username/password and move to users\n    this.http.post(`http://localhost:8080/api/create-username-password/${this.registrationId}`, credentials)\n      .subscribe(response => {\n        // Handle the response (e.g., show success message)\n      });\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAK1BC,YAAoBC,KAAqB,EAAUC,WAAwB,EAAUC,MAAc,EAAUC,IAAgB;IAAzG,KAAAH,KAAK,GAALA,KAAK;IAA0B,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAJjH,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,cAAc,GAAW,EAAE;EAEqG;EAEhIC,QAAQA,CAAA;IACN,MAAMC,WAAW,GAAG;MAAEJ,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAE;IAExE;IACA,IAAI,CAACF,IAAI,CAACM,IAAI,CAAC,sDAAsD,IAAI,CAACC,cAAc,EAAE,EAAEF,WAAW,CAAC,CACrGG,SAAS,CAACC,QAAQ,IAAG;MACpB;IAAA,CACD,CAAC;EACN;CACD;AAhBYd,eAAe,GAAAe,UAAA,EAL3BhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWlB,eAAe,CAgB3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}